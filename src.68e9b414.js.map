{"version":3,"sources":["src/index.js"],"names":["users","fetchUsers","document","getElementById","onclick","filterUsersDebounce","debounce","filterUsers","f","ms","isCooldown","timer","timer2","clearTimeout","setTimeout","apply","arguments","innerHTML","fetch","then","response","json","result","showTable","results","e","filteredUsers","filter","user","firstName","name","first","toUpperCase","lastName","last","target","value","includes","table","length","map","registeredDate","dateFormat","registered","date","picture","thumbnail","large","location","state","city","email","phone","dd","Date","getDate","getMonth","getFullYear","oninput"],"mappings":";AACA,IAAIA,EAGJC,IAGAC,SAASC,eAAe,aAAaC,QAAU,WAAMH,OAAAA,KAGrD,IAAII,EAAsBC,EAASC,EAAa,KAYhD,SAASD,EAASE,EAAGC,GAKfC,IACAC,EACAC,EAFAF,GAAa,EAGV,OAAA,WAAY,IAAA,EAAA,UAAA,EAAA,KACbA,GAAAA,EAQF,OAPAG,aAAaF,GACbE,aAAaD,QACbD,EAAQG,WAAW,WACjBN,EAAEO,MAAM,EAAMC,GAEdN,GAAa,GACZ,MAGLA,GAAa,EACbF,EAAEO,MAAM,KAAMC,WAEdH,aAAaF,GACbE,aAAaD,GACbA,EAASE,WAAW,WAClBJ,GAAa,GACZD,IAIP,SAASR,IAEPC,SAASC,eAAe,SAASc,UAFb,gCAIpBC,MAAM,yCACHC,KAAK,SAACC,GAAaA,OAAAA,EAASC,SAC5BF,KAAK,SAACG,GAILC,EAFAvB,EAAQsB,EAAOE,WAOrB,SAASjB,EAAYkB,GAEfA,GAAM,UAANA,EAAAA,CAMAC,IAAAA,EAAgB1B,EAAM2B,OAAO,SAACC,GAC5BC,IAAAA,EAAYD,EAAKE,KAAKC,MAAMC,cAC5BC,EAAWL,EAAKE,KAAKI,KAAKF,cAC1BG,EAASV,EAAEU,OAAOC,MAAMJ,cACrBH,OAAAA,EAAUQ,SAASF,IAAWF,EAASI,SAASF,KAGlC,KAAnBV,EAAEU,OAAOC,QAAcV,EAAgB1B,GAC3CuB,EAAUG,QAZRH,EAAUvB,GAgBd,SAASuB,EAAUvB,GAEbsC,IAAAA,EAEoBA,EAAH,IAAjBtC,EAAMuC,OAAsB,0BAE9B,yTAcFvC,EAAMwC,IAAI,SAACZ,GAELa,IAAAA,EAAiBC,EAAWd,EAAKe,WAAWC,MAEhDN,GAEoBV,qCAAAA,OAAAA,EAAKE,KAAKC,MAAQ,IAAMH,EAAKE,KAAKI,KACtBN,6CAAAA,OAAAA,EAAKiB,QAAQC,UAE3BlB,2DAAAA,OAAAA,EAAKiB,QAAQE,MAGvBnB,6CAAAA,OAAAA,EAAKoB,SAASC,MAAQ,IAAMrB,EAAKoB,SAASE,KAC1CtB,qBAAAA,OAAAA,EAAKuB,MACLvB,qBAAAA,OAAAA,EAAKwB,MACLX,qBAAAA,OAAAA,EAXR,gCAgBFH,GAAA,uBAEApC,SAASC,eAAe,SAASc,UAAYqB,EAI/C,SAASI,EAAWE,GAYXS,OATE,IAAIC,KAAKV,GAAMW,UASZ,KANV,IAAID,KAAKV,GAAMY,WAAa,GACxB,IAAM,IAAIF,KAAKV,GAAMY,WACrB,IAAIF,KAAKV,GAAMW,WAIE,IAFZ,IAAID,KAAKV,GAAMa,cApI5BvD,SAASC,eAAe,UAAUuD,QAAU,SAACjC,GAC3CpB,EAAoBoB,IAItBvB,SAASC,eAAe,aAAaC,QAAU,WAC7CF,SAASC,eAAe,UAAUiC,MAAQ,GAC1C7B,EAAY","file":"src.68e9b414.js","sourceRoot":"..","sourcesContent":["// Массив пользователей\nlet users;\n\n// Загружаем данные\nfetchUsers();\n\n// Загрузить данные снова\ndocument.getElementById(\"fetch-btn\").onclick = () => fetchUsers();\n\n// Обработчик поля для ввода\nlet filterUsersDebounce = debounce(filterUsers, 2000);\ndocument.getElementById(\"filter\").oninput = (e) => {\n  filterUsersDebounce(e);\n};\n\n// обработчик кнопки сброса \"clear\"\ndocument.getElementById(\"clear-btn\").onclick = () => {\n  document.getElementById(\"filter\").value = \"\";\n  filterUsers(\"clear\");\n};\n\n// декоратор debounce\nfunction debounce(f, ms) {\n  // При первом событии срабатывает моментально\n  // Функция вызывается не чаще ms миллисекунд\n  // При частых нажатиях срабатывает только последнее событие\n  //\n  let isCooldown = false;\n  let timer;\n  let timer2;\n  return function () {\n    if (isCooldown) {\n      clearTimeout(timer);\n      clearTimeout(timer2);\n      timer = setTimeout(() => {\n        f.apply(this, arguments);\n        //console.log(\"2\");\n        isCooldown = false;\n      }, 2000);\n      return;\n    }\n    isCooldown = true;\n    f.apply(this, arguments);\n    //console.log(\"1\");\n    clearTimeout(timer);\n    clearTimeout(timer2);\n    timer2 = setTimeout(() => {\n      isCooldown = false;\n    }, ms);\n  };\n}\n// fetch users from endpoint\nfunction fetchUsers() {\n  // индикатор загрузки\n  document.getElementById(\"table\").innerHTML = `<img src=\"./Loading-bar.gif\">`;\n  // получение данных\n  fetch(\"https://randomuser.me/api/?results=15\")\n    .then((response) => response.json())\n    .then((result) => {\n      // Записываем результат в массив users\n      users = result.results;\n      // отображаем результаты\n      showTable(users);\n    });\n}\n\n// Фунция - фильтр пользователей\nfunction filterUsers(e) {\n  // если событие вызвано нажатием на кнопку \"clear\"\n  if (e === \"clear\") {\n    // отображаем всех\n    showTable(users);\n    return;\n  }\n  // фильтр массива users\n  let filteredUsers = users.filter((user) => {\n    let firstName = user.name.first.toUpperCase();\n    let lastName = user.name.last.toUpperCase();\n    let target = e.target.value.toUpperCase();\n    return firstName.includes(target) || lastName.includes(target);\n  });\n  // если поле пустое отображаем всех\n  if (e.target.value === \"\") filteredUsers = users;\n  showTable(filteredUsers);\n}\n\n//  Отображение пользователей\nfunction showTable(users) {\n  // формируем html таблицы\n  let table;\n  // checking the results for emptiness\n  if (users.length === 0) table = \"<p>No records found</p>\";\n  else\n    table = `\n  <table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Picture</th>\n      <th scope=\"col\">Location</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Phone</th>\n      <th scope=\"col\">Registered date</th>\n    </tr>\n  </thead>\n  <tbody>`;\n  // цикл по users для генерации строк таблицы\n  users.map((user) => {\n    // get formated date string\n    let registeredDate = dateFormat(user.registered.date);\n\n    table += `\n    <tr>\n      <th scope=\"row\">${user.name.first + \" \" + user.name.last}</th>\n      <td class=\"photo\"><img src=\"${user.picture.thumbnail}\">\n        <p class=\"photo-tip\">\n          <img src=\"${user.picture.large}\">\n        </p>\n      </td>\n      <td>${user.location.state + \" \" + user.location.city}</td>\n      <td>${user.email}</td>\n      <td>${user.phone}</td>\n      <td>${registeredDate}</td>\n    </tr>\n    <tr>`;\n  });\n\n  table += `</tbody>\n  </table>`;\n  document.getElementById(\"table\").innerHTML = table;\n}\n\n// Форматирование даты\nfunction dateFormat(date) {\n  // format date to dd.MM.yyyy\n  // day of month\n  let dd = new Date(date).getDate();\n  // month\n  let MM =\n    new Date(date).getMonth() < 10\n      ? \"0\" + new Date(date).getMonth()\n      : new Date(date).getDate();\n  // year\n  let yyyy = new Date(date).getFullYear();\n  // return formatted string\n  return dd + \".\" + MM + \".\" + yyyy;\n}\n"]}